@{
    ViewBag.Title = "календарь событий";
}

<script src="~/Scripts/isotop/isotope.pkgd.min.js"></script>
<script src="~/Scripts/AngularJs/angular.min.js"></script>
<script src="~/Scripts/AngularControllers/EventCalendarContoller.js"></script>

<div class="bgvideo">
    <video width="100%" height="100%" id="vplayer">
        <source src="~/Content/video/video.mp4" type="video/mp4" />
        <source src="~/Content/video/video.webm" type="video/webm" />
        <source src="~/Content/video/video.ogv" type="video/ogg" />
    </video>
    <script>
        function p() {
            var video = document.getElementById('vplayer');
            video.loop = true;
            video.autoplay = true;
            video.play();
        }
        p();
    </script>
</div>

<div class="content">
    <div id="calendar" ng-app="eventcalendarapp" ng-controller="EventCalendar">
        <div class="calendar-title">Ближайшие события</div>
        <div id="calendar-wrap">

            <div class="event-day" ng-repeat="item in Events">
                <a href="" class="ed-wrap">
                    {{item.day}}<em class="ed-month">{{item.month}}</em>
                    <br>
                    <strong class="ed-title">{{item.data.header}}</strong>
                    <span class="ed-imgwrap">
                        <img src="{{item.data.photo}}" class="ed-image" alt="">
                    </span>
                </a>
            </div>

        </div>
    </div>
</div>

<script>
    /*Date.prototype.monthDays = function () {
        return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate();
    }*/

    window.onload = function () {
        /*var xhr = new XMLHttpRequest();
        xhr.open('GET', 'GetCalendar', true);
        xhr.send();
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4) {
                calendar('calendar-wrap', 30, JSON.parse(xhr.response).CurDate.replace(/\D+/g, ""), JSON.parse(xhr.response).Calendar);
            }
        }*/
    };

    function fillCalendar(obj) {
        var calendar = document.getElementById('calendar-wrap'),
            l = obj.length,
            counter = 0,
            _week = document.createElement('div'),
            _weekDay = document.createElement('div');

        for (var i = 0; i < l; i++) {
            _weekDay = document.createElement('div');

            if (counter == 6 || i == l - 1) {
                var _div = document.createElement('div');
                _div.textContent = obj[i].data.header;

                _weekDay.className = 'event-day';
                _weekDay.textContent = obj[i].day;
                _weekDay.appendChild(_div);

                _week.className = 'event-week';
                _week.appendChild(_weekDay);

                calendar.appendChild(_week);

                _week = document.createElement('div');
                counter = 0;
            } /*else if (i == l-1) {
                _weekDay.className = 'event-day';
                _weekDay.textContent = obj[i];
                _week.appendChild(_weekDay);
                calendar.appendChild(_week);

                _week = document.createElement('div');
                counter = 0;
            }*/ else {
                var _div = document.createElement('div');
                _div.textContent = obj[i].data.header;

                _weekDay.className = 'event-day';
                _weekDay.textContent = obj[i].day;
                _weekDay.appendChild(_div);

                _week.appendChild(_weekDay);
                counter++;
            }
        }

        var elem = document.querySelector('#calendar-wrap');
        var iso = new Isotope(elem, {
            itemSelector: '.event-day',
            layoutMode: 'masonry'
        });

    }

    /*function calendar(obj, dcount) {
        var _calendar = document.getElementById(obj);

        for (var i = 0; i < dcount; i++) {
            var _eventDay = document.createElement('div');
            _eventDay.className = 'event-day';
            _eventDay.textContent = i;
            _calendar.appendChild(_eventDay);
        }
    }*/

    function setCalendaData(_d, _m) {
        return { day: _d, month: _m, data: [] };
    }

    function calendar(obj, dcount, curdate, respons) {
        var date = new Date(parseInt(curdate)),
            m = date.getMonth()+1, daysInMonth = date.monthDays(),
            cal = [],
            l = dcount;

        /* формирование календаря */
        for (var i = 0; i < l; ++i) {
            d = date.getDate();

            if (d >= daysInMonth) {
                var obj = setCalendaData(d, m);
                cal[i] = obj;

                if (m != 13) {
                    date.setMonth(m + 1);
                    date.setDate(1);

                    var obj = setCalendaData(d, m);

                    cal[i] = obj;
                }
            }
            else
            {
                var obj = setCalendaData(d, m);

                cal[i] = obj;
                date.setDate(d + 1);
            }
        }

        /* Заполнение календаря событиями */
        l = respons.length;
        for (var i = 0; i < l; i++) {
            var _d = respons[i].EventDate.replace(/\D+/g, ""),
                date = new Date(parseInt(_d)),
                d = date.getDate(),
                _calL = cal.length;

            for (var j = 0; j < _calL; j++) {
                if (cal[j].day === d) {
                    var _obj = { header: respons[i].Header, photo: respons[i].PhotoLink }
                    cal[j].data = _obj;
                    break;
                }
            }
        }
        //console.log(cal);
        fillCalendar(cal);
    }

</script>